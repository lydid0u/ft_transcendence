const SPA = {
    SPAattribute: {
        defaultRoute: '/', //page par d√©faut
        contentDiv: '#content' //id de l'html o√π le contenu sera charg√©
    },    // cache pour stocker les pages d√©j√† charg√©es et eviter de les recharger
    cache: new Map(),
      // Fonction pour masquer la navigation et adapter le layout pour la landing page    hideStyleForLandingPage: function () {
        // V√©rifie si la balise nav existe avant d'essayer d'y acc√©der
        const navElement = document.querySelector('nav');
        if (navElement) {
            navElement.style.display = 'none';
        }
        
        // R√©initialiser les styles du body pour la landing page
        document.body.style.margin = '';
        document.body.style.padding = '';
        document.body.style.overflow = '';
        document.body.style.height = '';
        document.body.style.background = '';
        
        const main = document.querySelector('main');
        main.style.margin = '0';
        main.style.maxWidth = 'none';
        main.style.background = 'transparent';
        main.style.boxShadow = 'none';
        main.style.borderRadius = '0';
        main.style.minHeight = '100vh';        main.style.padding = '0';
    },    // Fonction pour restaurer la navigation et le layout normal    mainDivCSS: function () {
        // V√©rifie si la balise nav existe avant d'essayer d'y acc√©der
        const navElement = document.querySelector('nav');
        if (navElement) {
            navElement.style.display = 'block';
        }
        const main = document.querySelector('main');
        
        // Style pour la TV en arri√®re-plan en plein √©cran
        document.body.style.margin = '0';
        document.body.style.padding = '0';
        document.body.style.overflow = 'hidden';
        document.body.style.height = '100vh';
        document.body.style.background = '#2a2119'; // Couleur de fond sombre autour de la TV
        
        main.style.margin = '0';
        main.style.maxWidth = 'none';
        main.style.width = '100%';
        main.style.padding = '0';
        main.style.height = '100vh';
        main.style.background = 'url("./nobg.png") no-repeat center center';
        main.style.backgroundSize = 'contain';
        main.style.boxShadow = 'none';
        main.style.borderRadius = '0';
        main.style.display = 'flex';
        main.style.justifyContent = 'center';
        main.style.alignItems = 'center';
        main.style.position = 'relative';
    },

    // Fonction pour afficher la transition VHS
    showVhsTransition: function () {
        const app = document.querySelector('#content');
        app.innerHTML = `
            <div class="vhs-transition">
                <img src="gif/vhs.gif" class="vhs-gif" alt="Transition VHS">
            </div>
        `;

        // Apr√®s 3 secondes (ajustez selon la dur√©e de votre GIF), rediriger vers /home
        setTimeout(() => {
            this.navigateTo('/home');
            setTimeout(() => { this.addGlobalRemoteControl(); }, 200); // Affiche la t√©l√©commande juste apr√®s l'arriv√©e sur /home
        }, 2000);
    },

    notAuthenticated: function () {
        const contentDiv = document.querySelector(this.SPAattribute.contentDiv);
        contentDiv.innerHTML = `
            <div class="page-content">
                <h2>Vous n'√™tes pas connect√©</h2>
                <p>Veuillez vous connecter pour acc√©der √† cette page.</p>
                <button class="btn" onclick="SPA.navigateTo('/login')">Se connecter</button>
            </div>
        `;
    },

    routes: {
        '/': {
            title: 'ft_transcendence',
            content: 'pages/landing.html', // Path to HTML file
            routeScript: function () {
                SPA.hideStyleForLandingPage();
                console.log('üé¨ Landing page charg√©e');
            }
        },

        '/home': {
            title: 'Accueil',
            content: 'pages/home.html', // Path to HTML file
            routeScript: function () {
                SPA.mainDivCSS();
                setTimeout(() => { SPA.addGlobalRemoteControl(); }, 100); // Affiche la t√©l√©commande apr√®s le chargement de la page home
            }
        },

        '/about': {
            title: 'Qui sommes-nous ?',
            content: 'pages/about.html', // Path to HTML file
            routeScript: function () {
                SPA.mainDivCSS();
                console.log('Page √Ä propos charg√©e !');
            }
        },

        '/tournoi': {
            title: 'tournoi',
            content: 'pages/tournoi.html', // Path to HTML file
            routeScript: function () {
                SPA.mainDivCSS();

                const isAuthenticated = localStorage.getItem('isAuthenticated');
                if (!isAuthenticated) {
                    SPA.notAuthenticated();
                } else {
                    const user = JSON.parse(localStorage.getItem('user'));
                    const contentDiv = document.querySelector(SPA.SPAattribute.contentDiv);
                    contentDiv.innerHTML += `
                        <div class="page-content">
                            <p>tournoi log</p>
                        </div>
                    `;
                }
            }
        },

        '/dashboard': {
            title: 'dashboard',
            content: 'pages/dashboard.html', // Path to HTML file
            routeScript: function () {
                SPA.mainDivCSS();

                const isAuthenticated = localStorage.getItem('isAuthenticated');
                if (!isAuthenticated) {
                    SPA.notAuthenticated();
                } else {
                    const user = JSON.parse(localStorage.getItem('user'));
                    const contentDiv = document.querySelector(SPA.SPAattribute.contentDiv);

                    contentDiv.innerHTML += `
                        <div class="page-content">
                            <p>dashboard je suis log et je suis</p>
                        </div>
                    `;
                }
            }
        },

        '/login': {
            title: 'login',
            content: 'pages/login.html', // Path to HTML file
            routeScript: function () {
                SPA.mainDivCSS();

                if (typeof google !== 'undefined' && google.accounts) {
                    google.accounts.id.initialize({
                        client_id: "632484486903-vm1hfg66enqfkffsmlhih0au506obuch.apps.googleusercontent.com",
                        callback: handleGoogleAuth
                    });

                    // afficher le bouton de connexion
                    google.accounts.id.renderButton(
                        document.querySelector('.g_id_signin'),
                        {
                            theme: "outline",
                            size: "large",
                            text: "sign_in_with",
                            shape: "rounded",
                            logo_alignment: "left"
                        }
                    );
                }

                // V√©rifier si l'utilisateur est d√©j√† connect√©
                const savedUser = localStorage.getItem('googleUser');
                if (savedUser) {
                    const userData = JSON.parse(savedUser);
                    displayUserInfo(userData);
                }

                // G√©rer la d√©connexion
                const signoutBtn = document.getElementById('signout-btn');
                if (signoutBtn) {
                    signoutBtn.addEventListener('click', signOut);
                }

                login()
            }
        },

        '/register': {
            title: 'register',
            content: 'pages/register.html', // Path to HTML file
            routeScript: function () {
                SPA.mainDivCSS();

                register();
            }
        },

        '/changePassword': {
            title: 'changePassword',
            content: 'pages/changePassword.html', // Path to HTML file
            routeScript: function () {
                SPA.mainDivCSS();

                changePassword();
            }
        },

        '/profile': {
            title: 'profile',
            content: 'pages/profile.html', // Path to HTML file
            routeScript: function () {
                SPA.mainDivCSS();

                const isAuthenticated = localStorage.getItem('isAuthenticated');
                if (!isAuthenticated) {
                    SPA.notAuthenticated();
                } else {
                    const user = JSON.parse(localStorage.getItem('user'));
                    const contentDiv = document.querySelector(SPA.SPAattribute.contentDiv);
                    contentDiv.innerHTML += `
                        <div class="page-content">
                            <p>Bienvenue, ${user.email} !</p>
                            <p><a href="/changePassword" data-route="/changePassword" style="color: #007bff;" > Changer </a>de mot de passe ?<p>
                            
                        </div>
                    `;

                    getUserDataFromBackend();
                }
            }
        }
    },

    //cette fonction demarre la SPA, elle est appel√©e quand le DOM est charg√© et charge la 1e page
    initSPA: function () {
        console.log('üöÄ Initialisation de la SPA...');

        this.handleClick();
        this.handlePreviousNextButtons();
        this.loadCurrentPage();

        console.log('‚úÖ SPA initialis√©e avec succ√®s !');
    },

    //gere les clics sur les liens de navigation et empeche le rechargement de la page
    handleClick: function () {
        document.addEventListener('click', (e) => {

            const link = e.target.closest('[data-route]'); // on recup l'element clique avec e.target et .closest cherche dans le DOM l'element le plus proche qui a l'attribut 'data-route'
            //si ca a ete trouve, on stop le comportement par defaut (rechargement de la page) et on change l'url et le contenu sur la page sans recharger la page
            if (link) {
                e.preventDefault();
                const route = link.getAttribute('data-route');
                this.navigateTo(route);
            }
        });
    },

    handlePreviousNextButtons: function () {
        window.addEventListener('popstate', () => { //popstate est un evenement web qui sactive apres qu'on ai clique suivant/precedent et previent du changement d'url
            this.loadCurrentPage(); //cette fonction est alors appelee pour charger la page correspondante a l'url actuelle
        });
    },

    navigateTo: function (route) {
        // fonction membre qui vient de l'API History et qui change l'url sans recharger la page
        history.pushState(null, null, route);

        this.loadRoute(route);

        this.setCurrentPageToActive(route);
    },

    loadRoute: async function (route) { // Make function async
        console.log(`üìÑ Chargement de la route: ${route}`);

        const routeToLoad = this.routes[route];
        if (!routeToLoad) {
            console.error(`‚ùå Route non trouv√©e: ${route}`);
            this.error404();
            return;
        }

        document.title = routeToLoad.title;
        const contentDiv = document.querySelector(this.SPAattribute.contentDiv);

        // Check if content is a path to an .html file
        if (typeof routeToLoad.content === 'string' && routeToLoad.content.endsWith('.html')) {
            try {
                const response = await fetch(routeToLoad.content);
                if (!response.ok) {
                    throw new Error(`Erreur lors du chargement de ${routeToLoad.content}: ${response.statusText}`);
                }                const html = await response.text();
                contentDiv.innerHTML = html;
            } catch (error) {
                console.error(`Erreur lors du chargement du contenu HTML pour ${route}:`, error);
                contentDiv.innerHTML = '<p>Erreur de chargement du contenu.</p>';
                this.error404();
                return;
            }
        } else if (typeof routeToLoad.content === 'string') {
            // Fallback for direct HTML string content (if any are left)            contentDiv.innerHTML = routeToLoad.content;
        } else {
            console.error(`‚ùå Contenu de route invalide pour: ${route}`);
            this.error404();
            return;
        }

        contentDiv.classList.remove('fade-in');
        contentDiv.offsetHeight; // Force reflow for animation
        contentDiv.classList.add('fade-in');

        if (routeToLoad.routeScript && typeof routeToLoad.routeScript === 'function') {
            setTimeout(() => {
                routeToLoad.routeScript();
            }, 10);
        }
    },

    loadCurrentPage: function () {
        const currentPath = window.location.pathname;
        this.loadRoute(currentPath);
        this.setCurrentPageToActive(currentPath);
    },

    // supprime le css active de l'ancienne page et ajoute le nouveau css
    setCurrentPageToActive: function (currentRoute) {
        document.querySelectorAll('.nav-links a').forEach(link => {
            link.classList.remove('active');
        });

        const activeLink = document.querySelector(`[data-route="${currentRoute}"]`);
        if (activeLink) {
            activeLink.classList.add('active');
        }
    },

error404: function() {
    // Appliquons le style de mise en page pour les pages qui ne sont pas la landing page
    this.mainDivCSS();
    
    const contentDiv = document.querySelector(this.SPAattribute.contentDiv);
    contentDiv.innerHTML = `
        <div class="error404-content">
            <h1 class="error-title">Page non trouv√©e</h1>
            <p class="error-message">La page que vous recherchez n'existe pas.</p>
            <img src="gif/error404.gif" class="error-gif" alt="Erreur 404" style="max-width:80%; max-height: 40vh;">
            <button class="btn" onclick="SPA.navigateTo('/home')" style="margin-top:20px;">Retour √† l'accueil</button>
        </div>
    `;
    
    // Supprimer l'ancienne t√©l√©commande si elle existe
    const existingRemote = document.querySelector('.remote-control-404');
    if (existingRemote) {
        existingRemote.remove();
    }
    
    // Supprimer l'ancien style si il existe
    const existingStyle = document.querySelector('#remote-style-404');
    if (existingStyle) {
        existingStyle.remove();
    }
    
    // Map des cha√Ænes/pages pour navigation
    const channels = new Map([
        [1, { name: 'Landing', route: '/' }],
        [2, { name: 'Home', route: '/home' }],
        [3, { name: 'About', route: '/about' }],
        [4, { name: 'Dashboard', route: '/dashboard' }],
        [5, { name: 'Tournoi', route: '/tournoi' }],
        [6, { name: 'Profile', route: '/profile' }],
        [7, { name: 'Login', route: '/login' }],
        [8, { name: 'Register', route: '/register' }],
        [9, { name: 'Password', route: '/changePassword' }]
    ]);
    
    let currentChannel = 4;
    
    // CSS style t√©l√©commande cartoon - MODIFI√â POUR TOP HOVER
    const style = document.createElement('style');
    style.id = 'remote-style-404';
    style.textContent = `
        /* Zone de d√©tection hover invisible en bas √† droite */
        .hover-zone-404 {
            position: fixed !important;
            bottom: 0 !important;
            right: 0 !important;
            width: 200px !important;
            height: 30px !important;
            z-index: 999998 !important;
            background: transparent !important;
            cursor: pointer !important;
        }
        
        .hover-zone-404::before {
            content: '';
            position: absolute;
            bottom: 5px;
            right: 20px;
            font-size: 16px;
            color: #fff;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.8);
            pointer-events: none;
            opacity: 0.7;
        }
        
        .remote-control-404 {
            position: fixed !important;
            bottom: -420px !important;
            right: 20px !important;
            z-index: 999999 !important;
            transition: bottom 0.4s ease !important;
        }
        
        /* Quand on hover la zone OU la t√©l√©commande */
        .hover-zone-404:hover + .remote-control-404,
        .remote-control-404:hover {
            bottom: 20px !important;
        }
        
        .remote-body {
            width: 180px;
            height: 440px;
            background: #7dd3c0;
            border: 4px solid #f4d03f;
            border-radius: 25px;
            box-shadow: 
                0 10px 30px rgba(0,0,0,0.3),
                inset 0 2px 0 rgba(255,255,255,0.3);
            padding: 20px;
            position: relative;
        }
        
        /* Un seul bouton power rouge en haut √† gauche */
        .power-btn {
            width: 35px;
            height: 35px;
            background: #e74c3c;
            border: 3px solid #2c3e50;
            border-radius: 50%;
            cursor: pointer;
            box-shadow: 0 4px 0 #c0392b;
            transition: all 0.1s ease;
            margin-bottom: 20px;
        }
        
        .power-btn:hover {
            background: #ec7063;
        }
        
        .power-btn:active {
            transform: translateY(2px);
            box-shadow: 0 2px 0 #c0392b;
        }
        
        /* Grille 3x3 boutons blancs */
        .nav-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            grid-template-rows: repeat(3, 1fr);
            gap: 8px;
            margin-bottom: 20px;
        }
        
        .nav-btn {
            width: 40px;
            height: 25px;
            background: #ffffff;
            border: 3px solid #2c3e50;
            border-radius: 15px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 12px;
            font-weight: bold;
            color: #2c3e50;
            box-shadow: 0 3px 0 #34495e;
            transition: all 0.1s ease;
        }
        
        .nav-btn:hover {
            background: #ecf0f1;
        }
        
        .nav-btn:active {
            transform: translateY(2px);
            box-shadow: 0 1px 0 #34495e;
        }
        
        /* Boutons jaunes sur les c√¥t√©s */
        .side-buttons {
            display: flex;
            justify-content: space-between;
            margin-bottom: 20px;
        }
        
        .side-btn {
            display: none;
            width: 30px;
            height: 30px;
            background: #f1c40f;
            border: 3px solid #2c3e50;
            border-radius: 50%;
            cursor: pointer;
            box-shadow: 0 3px 0 #f39c12;
            transition: all 0.1s ease;
        }
        
        .side-btn:hover {
            background: #f7dc6f;
        }
        
        .side-btn:active {
            transform: translateY(2px);
            box-shadow: 0 1px 0 #f39c12;
        }
        
        /* Pad directionnel central */
        .directional-pad {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-bottom: 20px;
        }
        
        .dpad-container {
            position: relative;
            width: 100px;
            height: 100px;
            background: #f1c40f;
            border: 4px solid #2c3e50;
            border-radius: 15px;
            box-shadow: 0 4px 0 #f39c12;
        }
        
        .dpad-btn {
            position: absolute;
            background: transparent;
            border: none;
            cursor: pointer;
            font-size: 16px;
            font-weight: bold;
            color: #2c3e50;
            width: 20px;
            height: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .dpad-up {
            top: 10px;
            left: 50%;
            transform: translateX(-50%);
        }
        
        .dpad-down {
            bottom: 10px;
            left: 50%;
            transform: translateX(-50%);
        }
        
        .dpad-left {
            left: 10px;
            top: 50%;
            transform: translateY(-50%);
        }
        
        .dpad-right {
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
        }
        
        .dpad-center {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 30px;
            height: 30px;
            background: #2c3e50;
            border: 2px solid #fff;
            border-radius: 50%;
            color: #fff;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 10px;
            cursor: pointer;
        }
        
        .dpad-center:hover {
            background: #34495e;
        }
        
        /* Boutons color√©s en bas */
        .color-row {
            display: flex;
            justify-content: space-around;
            margin-bottom: 20px;
        }
        
        .color-btn {
            width: 35px;
            height: 15px;
            border: 3px solid #2c3e50;
            border-radius: 10px;
            cursor: pointer;
            box-shadow: 0 3px 0 rgba(0,0,0,0.2);
            transition: all 0.1s ease;
        }
        
        .color-btn.red {
            background: #e74c3c;
        }
        
        .color-btn.yellow {
            background: #f1c40f;
        }
        
        .color-btn.green {
            background: #27ae60;
        }
        
        .color-btn:hover {
            filter: brightness(1.1);
        }
        
        .color-btn:active {
            transform: translateY(2px);
            box-shadow: 0 1px 0 rgba(0,0,0,0.2);
        }
        
        /* √âcran en haut - VRAIMENT PLUS LARGE */
        .remote-screen {
            width: 140px;
            height: 35px;
            background: #2c3e50;
            border: 2px solid #34495e;
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 15px auto;
        }
        
        .channel-display {
            color: #00ff00;
            font-family: 'Courier New', monospace;
            font-size: 12px;
            font-weight: bold;
        }
    `;
    document.head.appendChild(style);
    
    // HTML de la t√©l√©commande cartoon avec zone de hover
    const remoteHTML = `
        <div class="hover-zone-404"></div>
        <div class="remote-control-404">
            <div class="remote-body">
                <div class="remote-screen">
                    <span class="channel-display" id="channel-display">CH 4 - Dashboard</span>
                </div>
                
                <div class="power-btn" onclick="SPA.navigateTo('/login')" title="Power"></div>
                
                <div class="nav-grid">
                    <button class="nav-btn" onclick="remoteNavigate('/')" title="Landing">1</button>
                    <button class="nav-btn" onclick="remoteNavigate('/home')" title="Home">2</button>
                    <button class="nav-btn" onclick="remoteNavigate('/about')" title="About">3</button>
                    <button class="nav-btn" onclick="remoteNavigate('/dashboard')" title="Dashboard">4</button>
                    <button class="nav-btn" onclick="remoteNavigate('/tournoi')" title="Tournoi">5</button>
                    <button class="nav-btn" onclick="remoteNavigate('/profile')" title="Profil">6</button>
                    <button class="nav-btn" onclick="remoteNavigate('/login')" title="Login">7</button>
                    <button class="nav-btn" onclick="remoteNavigate('/register')" title="Register">8</button>
                    <button class="nav-btn" onclick="remoteNavigate('/changePassword')" title="Password">9</button>
                </div>
                
                <div class="side-buttons">
                    <div class="side-btn" onclick="SPA.navigateTo('/profile')" title="Profil"></div>
                    <div class="side-btn" onclick="SPA.navigateTo('/tournoi')" title="Tournoi"></div>
                </div>
                
                <div class="directional-pad">
                    <div class="dpad-container">
                        <button class="dpad-btn dpad-up" onclick="changeChannel(1)" title="Channel +">‚ñ≤</button>
                        <button class="dpad-btn dpad-down" onclick="changeChannel(-1)" title="Channel -">‚ñº</button>
                        <button class="dpad-btn dpad-left" onclick="history.back()" title="Back">‚óÄ</button>
                        <button class="dpad-btn dpad-right" onclick="history.forward()" title="Forward">‚ñ∂</button>
                        <button class="dpad-center" onclick="location.reload()" title="OK">OK</button>
                    </div>
                </div>
                
                <div class="color-row">
                    <div class="color-btn red" onclick="SPA.navigateTo('/profile')" title="Rouge"></div>
                    <div class="color-btn yellow" onclick="SPA.navigateTo('/dashboard')" title="Jaune"></div>
                    <div class="color-btn green" onclick="SPA.navigateTo('/home')" title="Vert"></div>
                </div>
                
                <!-- Marge vide en bas -->
                <div style="height: 20px;"></div>
            </div>
        </div>
    `;
    
    document.body.insertAdjacentHTML('beforeend', remoteHTML);
    
    // Fonctions JavaScript
    window.remoteNavigate = function(route) {
        SPA.navigateTo(route);
    };
    
    window.changeChannel = function(direction) {
        const channelKeys = Array.from(channels.keys());
        let currentIndex = channelKeys.indexOf(currentChannel);
        
        if (direction > 0) {
            currentIndex = (currentIndex + 1) % channelKeys.length;
        } else {
            currentIndex = currentIndex <= 0 ? channelKeys.length - 1 : currentIndex - 1;
        }
        
        currentChannel = channelKeys[currentIndex];
        const channel = channels.get(currentChannel);
        
        document.getElementById('channel-display').textContent = `CH ${currentChannel} - ${channel.name}`;
        SPA.navigateTo(channel.route);
    };
    
    document.title = 'Error 404 - Cha√Æne introuvable';
    
    console.log('üéÆ T√©l√©commande top-hover ajout√©e !');
},

    // Fonction pour ajouter la t√©l√©commande cartoon sur toutes les pages sauf la landing
    addGlobalRemoteControl: function() {
        // Ne pas afficher la t√©l√©commande sur la landing page
        if (window.location.pathname === '/') return;
        // Supprimer l'ancienne t√©l√©commande si elle existe
        const existingRemote = document.querySelector('.remote-control-global');
        if (existingRemote) existingRemote.remove();
        const existingZone = document.querySelector('.hover-zone-global');
        if (existingZone) existingZone.remove();
        const existingStyle = document.querySelector('#remote-style-global');
        if (existingStyle) existingStyle.remove();

        // Map des cha√Ænes/pages pour navigation
        const channels = new Map([
            [1, { name: 'Landing', route: '/' }],
            [2, { name: 'Home', route: '/home' }],
            [3, { name: 'About', route: '/about' }],
            [4, { name: 'Dashboard', route: '/dashboard' }],
            [5, { name: 'Tournoi', route: '/tournoi' }],
            [6, { name: 'Profile', route: '/profile' }],
            [7, { name: 'Login', route: '/login' }],
            [8, { name: 'Register', route: '/register' }],
            [9, { name: 'Password', route: '/changePassword' }]
        ]);
        let currentChannel = 2;

        // CSS style t√©l√©commande cartoon - version globale
        const style = document.createElement('style');
        style.id = 'remote-style-global';
        style.textContent = `
            .hover-zone-global {
                position: fixed !important;
                bottom: 0 !important;
                right: 0 !important;
                width: 200px !important;
                height: 30px !important;
                z-index: 999998 !important;
                background: transparent !important;
                cursor: pointer !important;
            }
            .remote-control-global {
                position: fixed !important;
                bottom: -420px !important;
                right: 20px !important;
                z-index: 999999 !important;
                transition: bottom 0.4s ease !important;
            }
            .hover-zone-global:hover + .remote-control-global,
            .remote-control-global:hover {
                bottom: 20px !important;
            }
            .remote-body { width: 180px; height: 440px; background: #7dd3c0; border: 4px solid #f4d03f; border-radius: 25px; box-shadow: 0 10px 30px rgba(0,0,0,0.3), inset 0 2px 0 rgba(255,255,255,0.3); padding: 20px; position: relative; }
            .power-btn { width: 35px; height: 35px; background: #e74c3c; border: 3px solid #2c3e50; border-radius: 50%; cursor: pointer; box-shadow: 0 4px 0 #c0392b; transition: all 0.1s ease; margin-bottom: 20px; }
            .power-btn:hover { background: #ec7063; }
            .power-btn:active { transform: translateY(2px); box-shadow: 0 2px 0 #c0392b; }
            .nav-grid { display: grid; grid-template-columns: repeat(3, 1fr); grid-template-rows: repeat(3, 1fr); gap: 8px; margin-bottom: 20px; }
            .nav-btn { width: 40px; height: 25px; background: #ffffff; border: 3px solid #2c3e50; border-radius: 15px; cursor: pointer; display: flex; align-items: center; justify-content: center; font-size: 12px; font-weight: bold; color: #2c3e50; box-shadow: 0 3px 0 #34495e; transition: all 0.1s ease; }
            .nav-btn:hover { background: #ecf0f1; }
            .nav-btn:active { transform: translateY(2px); box-shadow: 0 1px 0 #34495e; }
            .side-buttons { display: flex; justify-content: space-between; margin-bottom: 20px; }
            .side-btn { width: 30px; height: 30px; background: #f1c40f; border: 3px solid #2c3e50; border-radius: 50%; cursor: pointer; box-shadow: 0 3px 0 #f39c12; transition: all 0.1s ease; }
            .side-btn:hover { background: #f7dc6f; }
            .side-btn:active { transform: translateY(2px); box-shadow: 0 1px 0 #f39c12; }
            .directional-pad { display: flex; flex-direction: column; align-items: center; margin-bottom: 20px; }
            .dpad-container { position: relative; width: 100px; height: 100px; background: #f1c40f; border: 4px solid #2c3e50; border-radius: 15px; box-shadow: 0 4px 0 #f39c12; }
            .dpad-btn { position: absolute; background: transparent; border: none; cursor: pointer; font-size: 16px; font-weight: bold; color: #2c3e50; width: 20px; height: 20px; display: flex; align-items: center; justify-content: center; }
            .dpad-up { top: 10px; left: 50%; transform: translateX(-50%); }
            .dpad-down { bottom: 10px; left: 50%; transform: translateX(-50%); }
            .dpad-left { left: 10px; top: 50%; transform: translateY(-50%); }
            .dpad-right { right: 10px; top: 50%; transform: translateY(-50%); }
            .dpad-center { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); width: 30px; height: 30px; background: #2c3e50; border: 2px solid #fff; border-radius: 50%; color: #fff; display: flex; align-items: center; justify-content: center; font-size: 10px; cursor: pointer; }
            .dpad-center:hover { background: #34495e; }
            .color-row { display: flex; justify-content: space-around; margin-bottom: 20px; }
            .color-btn { width: 35px; height: 15px; border: 3px solid #2c3e50; border-radius: 10px; cursor: pointer; box-shadow: 0 3px 0 rgba(0,0,0,0.2); transition: all 0.1s ease; }
            .color-btn.red { background: #e74c3c; }
            .color-btn.yellow { background: #f1c40f; }
            .color-btn.green { background: #27ae60; }
            .color-btn:hover { filter: brightness(1.1); }
            .color-btn:active { transform: translateY(2px); box-shadow: 0 1px 0 rgba(0,0,0,0.2); }
            .remote-screen { width: 140px; height: 35px; background: #2c3e50; border: 2px solid #34495e; border-radius: 10px; display: flex; align-items: center; justify-content: center; margin: 0 auto 15px auto; }
            .channel-display { color: #00ff00; font-family: 'Courier New', monospace; font-size: 12px; font-weight: bold; }
        `;
        document.head.appendChild(style);

        // HTML de la t√©l√©commande cartoon avec zone de hover
        const remoteHTML = `
            <div class="hover-zone-global"></div>
            <div class="remote-control-global">
                <div class="remote-body">
                    <div class="remote-screen">
                        <span class="channel-display" id="channel-display-global">CH 2 - Home</span>
                    </div>
                    <div class="power-btn" onclick="SPA.navigateTo('/login')" title="Power"></div>
                    <div class="nav-grid">
                        <button class="nav-btn" onclick="remoteNavigateGlobal('/')" title="Landing">1</button>
                        <button class="nav-btn" onclick="remoteNavigateGlobal('/home')" title="Home">2</button>
                        <button class="nav-btn" onclick="remoteNavigateGlobal('/about')" title="About">3</button>
                        <button class="nav-btn" onclick="remoteNavigateGlobal('/dashboard')" title="Dashboard">4</button>
                        <button class="nav-btn" onclick="remoteNavigateGlobal('/tournoi')" title="Tournoi">5</button>
                        <button class="nav-btn" onclick="remoteNavigateGlobal('/profile')" title="Profil">6</button>
                        <button class="nav-btn" onclick="remoteNavigateGlobal('/login')" title="Login">7</button>
                        <button class="nav-btn" onclick="remoteNavigateGlobal('/register')" title="Register">8</button>
                        <button class="nav-btn" onclick="remoteNavigateGlobal('/changePassword')" title="Password">9</button>
                    </div>
                    <div class="side-buttons">
                        <div class="side-btn" onclick="SPA.navigateTo('/profile')" title="Profil"></div>
                        <div class="side-btn" onclick="SPA.navigateTo('/tournoi')" title="Tournoi"></div>
                    </div>
                    <div class="directional-pad">
                        <div class="dpad-container">
                            <button class="dpad-btn dpad-up" onclick="changeChannelGlobal(1)" title="Channel +">‚ñ≤</button>
                            <button class="dpad-btn dpad-down" onclick="changeChannelGlobal(-1)" title="Channel -">‚ñº</button>
                            <button class="dpad-btn dpad-left" onclick="history.back()" title="Back">‚óÄ</button>
                            <button class="dpad-btn dpad-right" onclick="history.forward()" title="Forward">‚ñ∂</button>
                            <button class="dpad-center" onclick="location.reload()" title="OK">OK</button>
                        </div>
                    </div>
                    <div class="color-row">
                        <div class="color-btn red" onclick="SPA.navigateTo('/profile')" title="Rouge"></div>
                        <div class="color-btn yellow" onclick="SPA.navigateTo('/dashboard')" title="Jaune"></div>
                        <div class="color-btn green" onclick="SPA.navigateTo('/home')" title="Vert"></div>
                    </div>
                    <div style="height: 20px;"></div>
                </div>
            </div>
        `;
        document.body.insertAdjacentHTML('beforeend', remoteHTML);

        // Fonctions JavaScript globales
        window.remoteNavigateGlobal = function(route) {
            SPA.navigateTo(route);
        };
        window.changeChannelGlobal = function(direction) {
            const channelKeys = Array.from(channels.keys());
            let currentIndex = channelKeys.indexOf(currentChannel);
            if (direction > 0) {
                currentIndex = (currentIndex + 1) % channelKeys.length;
            } else {
                currentIndex = currentIndex <= 0 ? channelKeys.length - 1 : currentIndex - 1;
            }
            currentChannel = channelKeys[currentIndex];
            const channel = channels.get(currentChannel);
            document.getElementById('channel-display-global').textContent = `CH ${currentChannel} - ${channel.name}`;
            SPA.navigateTo(channel.route);
        };
    }
}

document.addEventListener('DOMContentLoaded', function() {
    SPA.addGlobalRemoteControl();
});