version: '3.8'

services:
  nginx:
    build:
      context: ./nginx
    container_name: nginx-gateway
    ports:
      - "8080:80"     # HTTP (redirigÃ© vers HTTPS)
      - "8443:443"    # HTTPS
    depends_on:
      - backend
      - frontend
    networks:
      - app-network
    volumes:
      - nginx_certs:/etc/nginx/ssl

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fastify-backend
    environment:
      - NODE_ENV=development
      - DB_PATH=/app/data/database.sqlite
      - PORT=3000
    volumes:
      - ./backend:/app
      - /app/node_modules
      - sqlite_data:/app/data
    depends_on:
      - db
    networks:
      - app-network
    # pas d'exposition de port (Nginx seul est public)
    command: npm run dev

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: vite-frontend
    environment:
      - NODE_ENV=development
      - VITE_API_URL=/api       # base URL relative, compatible 8443
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - app-network
    command: sh -c "npm run dev -- --host 0.0.0.0 --port 5173"


  db:
    image: alpine:latest
    container_name: sqlite-db
    volumes:
      - sqlite_data:/data
    command: >
      sh -c "
        apk add --no-cache sqlite &&
        mkdir -p /data &&
        if [ ! -f /data/database.sqlite ]; then
          sqlite3 /data/database.sqlite 'CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY, name TEXT, email TEXT);'
        fi &&
        tail -f /dev/null
      "
    networks:
      - app-network

volumes:
  sqlite_data:
    driver: local
  nginx_certs:
    driver: local

networks:
  app-network:
    driver: bridge
